version: '2.17'
services:

    postgres:
        image: postgres:15.3-alpine
        ports:
            - "${DB_PORT}"
        environment:
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_USER=${DB_USER}
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U Illustray"]
            interval: 1s
            timeout: 5s
            retries: 5
            
    migrations:
        build:
            context: ./pgmigrate
            dockerfile: Dockerfile
        volumes:
            - /app/node_modules
            - ./pgmigrate:/app
        environment:
            - DATABASE_URL=${DATABASE_URL}
        entrypoint: ["npm", "run", "migrate", "up"]
        depends_on:
            postgres:
                condition: service_healthy

    api:
        build:
            context: ./server
            dockerfile: Dockerfile
        volumes:
            - /app/node_modules
            - ./server:/app
        env_file:
            - .env
        ports:
            - "${PORT}"
        depends_on:
            migrations:
                condition: service_completed_successfully
            postgres:
                condition: service_healthy

    ui:
        build:
            context: ./client
            dockerfile: Dockerfile
        volumes:
            - /app/node_modules
            - ./client:/app
        ports:
            - "5173:5173"
        depends_on:
            - api
volumes:
    pgdata: