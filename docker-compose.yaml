version: "2.17"
services:
  postgres:
    image: postgres:15.3-alpine
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 1s
      timeout: 5s
      retries: 5

  migrations:
    build:
      context: ./pgmigrate
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: ["npm", "run", "migrate", "up"]
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - 8080:80
volumes:
  pgdata:
